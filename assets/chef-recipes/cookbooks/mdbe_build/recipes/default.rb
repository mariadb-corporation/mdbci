# frozen_string_literal: true

if node[:platform_family] == 'debian'
  if node[:platform_version].to_i != 9 && node[:platform_version].to_f != 14.04 && node[:platform_version].to_i != 8
    package 'libzstd-dev'
  end
  if node[:platform_version].to_f != 14.04 # Trysty
    package 'gnutls-dev'
    package 'libsystemd-dev'
    package 'libcurl3-dev'
    package 'libcurl4-openssl-dev'
  end
  if node[:platform_version].to_f != 16.04 # Xenial
    package 'libboost-dev'
    package 'libboost-system-dev'
    package 'libboost-filesystem-dev'
    package 'libboost-all-dev'
  end
  package 'git'
  package 'build-essential'
  package 'cmake'
  package 'make'
  package 'libaio-dev'
  package 'libssl-dev'
  package 'libncurses5-dev'
  package 'devscripts'
  package 'libnuma-dev'
  package 'libsnappy-dev'
  package 'uuid-dev'
  package 'dh-systemd'
  package 'libaio-dev'
  package 'perl-modules'
  package 'libmhash-dev'
  package 'libxml-simple-perl'
  package 'patch'
  package 'apt-utils'
  package 'python-dev'
  package 'sudo'
  package 'equivs'
  package 'ccache'
  package 'python3'
  package 'python3-pip'
  package 'curl'
  package 'libevent-dev'
  package 'dpatch'
  package 'gawk'
  package 'gdb'
  package 'libcrack2-dev'
  package 'libjudy-dev'
  package 'libxml2-dev'
  package 'unixodbc-dev'
  package 'fakeroot'
  package 'iputils-ping'
  package 'libpam-dev'
  package 'scons'
  package 'libboost-program-options-dev'
  package 'check'
  package 'socat'
  package 'lsof'
  package 'valgrind'
  package 'apt-transport-https'
  package 'software-properties-common'
  package 'dirmngr'
  package 'rsync'
  package 'netcat'
  package 'flex'
  package 'expect'
  package 'net-tools'
  package 'dh-apparmor'
  package 'libjemalloc-dev'
  package 'libkrb5-dev'
  package 'libreadline-gplv2-dev'
  package 'libbison-dev'
  package 'chrpath'
  package 'libgnutls28-dev'
  package 'libgcrypt20-dev'
  if node[:platform_version].to_f != 18.04 && node[:platform_version].to_f != 16.04
    execute 'install dependencies mariadb-server' do
      command 'sudo apt-get build-dep mariadb-server -y'
    end
  end
end

if node[:platform_family] == 'rhel' && (node[:platform_version].to_i == 7 || node[:platform_version].to_i == 6)
  if node[:platform_version].to_i != 6
    yum_package 'perl-Data-Dumper'
    yum_package 'systemd-devel'
  end
  yum_package 'yum-utils'
  execute 'install Development Tools' do
    command "sudo yum -y groupinstall 'Development Tools'"
  end
  yum_package 'gcc'
  yum_package 'gcc-c++'
  yum_package 'make'
  yum_package 'cmake'
  yum_package 'yum-utils'
  yum_package 'libaio-devel'
  yum_package 'openssl-devel'
  yum_package 'gnutls-devel'
  yum_package 'libgcrypt-devel'
  yum_package 'pam-devel'
  yum_package 'ncurses-devel'
  yum_package 'bison'
  yum_package 'zlib-devel'
  yum_package 'libevent-devel'
  yum_package 'wget'
  yum_package 'rpm-build'
  yum_package 'rpmdevtools'
  yum_package 'libaio-devel'
  yum_package 'libxml2-devel'
  yum_package 'boost-devel'
  yum_package 'check-devel'
  yum_package 'which'
  yum_package 'cracklib-devel'
  yum_package 'rsync'
  yum_package 'socat'
  yum_package 'lsof'
  yum_package 'patch'
  yum_package 'valgrind-devel'
  yum_package 'snappy-devel'
  yum_package 'expect'
  yum_package 'net-tools'
  yum_package 'mhash-devel'
  yum_package 'scons'
  yum_package 'Judy-devel'
  yum_package 'jemalloc'
  yum_package 'clang'
end

if node[:platform_family] == 'rhel' && node[:platform_version].to_i == 8
  dnf_package 'perl-Data-Dumper'
  dnf_package 'systemd-devel'
  dnf_package 'yum-utils'
  execute 'install Development Tools' do
    command "sudo yum -y groupinstall 'Development Tools'"
  end
  dnf_package 'gcc'
  dnf_package 'gcc-c++'
  dnf_package 'make'
  dnf_package 'cmake'
  dnf_package 'yum-utils'
  dnf_package 'libaio-devel'
  dnf_package 'openssl-devel'
  dnf_package 'gnutls-devel'
  dnf_package 'libgcrypt-devel'
  dnf_package 'pam-devel'
  dnf_package 'ncurses-devel'
  dnf_package 'bison'
  dnf_package 'zlib-devel'
  dnf_package 'libevent-devel'
  dnf_package 'wget'
  dnf_package 'rpm-build'
  dnf_package 'rpmdevtools'
  dnf_package 'libaio-devel'
  dnf_package 'libxml2-devel'
  dnf_package 'boost-devel'
  dnf_package 'check-devel'
  dnf_package 'which'
  dnf_package 'rsync'
  dnf_package 'socat'
  dnf_package 'lsof'
  dnf_package 'patch'
  dnf_package 'valgrind-devel'
  dnf_package 'expect'
  dnf_package 'net-tools'
  dnf_package 'mhash-devel'
  dnf_package 'jemalloc'
  dnf_package 'clang'
end

if node[:platform_family] == 'suse'
  zypper_package 'boost-devel' if node[:platform_version].to_f == 12.4 # Sles 12
  zypper_package 'perl-Data-Dump' if node[:platform_version].to_f == 15.1 # Suse 15
  zypper_package 'cmake'
  zypper_package 'make'
  zypper_package 'gcc'
  zypper_package 'wget'
  zypper_package 'gcc-c++'
  zypper_package 'libaio-devel'
  zypper_package 'perl-XML-Simple'
  zypper_package 'bison'
  zypper_package 'libopenssl-devel'
  zypper_package 'ncurses-devel'
  zypper_package 'rsync'
  zypper_package 'socat'
  zypper_package 'lsof'
  zypper_package 'tar'
  zypper_package 'gzip'
  zypper_package 'bzip2'
  zypper_package 'rpm-build'
  zypper_package 'checkpolicy'
  zypper_package 'policycoreutils'
  zypper_package 'curl'
  zypper_package 'perl'
  zypper_package 'wget'
  zypper_package 'sudo'
  zypper_package 'git-core'
  zypper_package 'expect'
  zypper_package 'net-tools'
  zypper_package 'flex'
  zypper_package 'autoconf'
  zypper_package 'automake'
  zypper_package 'libtool'
  zypper_package 'perl-XML-LibXML'
  zypper_package 'patch'
  zypper_package 'zlib-devel'
  zypper_package 'libgcrypt-devel'
  zypper_package 'libxml2-devel'
  zypper_package 'libcurl-devel'
  zypper_package 'snappy-devel'
  zypper_package 'valgrind-devel'
  zypper_package 'check-devel'
  zypper_package 'libevent-devel'
  zypper_package 'libgnutls-devel'
  zypper_package 'pam-devel'
  zypper_package 'systemd-devel'
  zypper_package 'libgnutls-devel'
  zypper_package 'rpm-build'
  zypper_package 'scons'
  execute 'install mariadb' do
    command 'sudo zypper -n source-install -d mariadb'
  end
end

CMAKE_VER = '3.16.4'
execute 'install cmake' do
  command "wget -q https://github.com/Kitware/CMake/releases/download/v#{CMAKE_VER}/cmake-#{CMAKE_VER}-Linux-x86_64.tar.gz --no-check-certificate &&
sudo tar xzf cmake-#{CMAKE_VER}-Linux-x86_64.tar.gz -C /usr/ --strip-components=1 &&
rm cmake-#{CMAKE_VER}-Linux-x86_64.tar.gz"
end
